server:
  port: 8080
spring:
  datasource:
    url: jdbc:mysql://localhost:3306/cloud_order?useSSL=false
    # url: jdbc:mysql://mysql:3306/cloud_order?useSSL=false # 改为 docker-compose.yml 集群部署的地址
    username: root
    password: lcz19930316
    driver-class-name: com.mysql.cj.jdbc.Driver
  application:
    name: orderService # order的服务名称
  cloud:
    nacos:
      server-addr: localhost:8888 # nacos 服务地址
      # server-addr: nacos:8848 # 改为 docker-compose.yml 集群部署的地址
      discovery:
        # cluster-name: XA
        namespace: f324b4ac-7a64-426d-8515-7fc9ce35669d # dev环境的命名空间ID
        # ephemeral: false # true为临时实例（默认值），false为非临时实例
    sentinel:
      transport:
        dashboard: localhost:1024 # sentinel 控制台地址
      web-context-unify: false # 关闭Sentinel的context整合，从而导致的链路模式的流控失效。
mybatis:
  type-aliases-package: cn.lee.user.pojo
  configuration:
    map-underscore-to-camel-case: true
logging:
  level:
    cn.lee: debug
  pattern:
    dateformat: MM-dd HH:mm:ss:SSS

#eureka:
#  client:
#    service-url: # eureka的地址信息
#      defaultZone: http://localhost:10086/eureka

userService:
  ribbon:
    # NIWSServerListClassName: com.netflix.loadbalancer.ConfigurationBasedServerList
    # NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule # 负载均衡策略配置
    NFLoadBalancerRuleClassName: com.alibaba.cloud.nacos.ribbon.NacosRule # nacos 负载均衡策略配置

ribbon:
  eager-load:
    enabled: true # 开启饥饿加载
    clients: userService # 指定饥饿加载的服务名称（值是一个集合）

feign:
  client:
    config:
      default:
        loggerLevel: FULL
  httpclient:
    enabled: true # 支持HttpClient的开关
    max-connections: 200 # 最大连接数（开发中要根据压测进行对这个属性的最优值进行配置）
    max-connections-per-route: 50 # 单个请求路径的最大连接数（开发中要根据压测进行对这个属性的最优值进行配置）
  sentinel:
    enabled: true # 开启feign对Sentinel的支持


